name: Publish latest

on:
  push:
    branches:
      - "release/latest"

env:
  NODE_VERSION: 16.x
  BASE_DOCKER_IMAGE_NAME: docker-prune

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.targetVersion }}
      isPrerelease: ${{ steps.version.outputs.targetIsPrerelease }}

    steps:
      - uses: actions/checkout@v3
      - name: Check Version
        id: version
        uses: cpdevtools/action-versions@latest
        with:
          failInvalidCanCreate: true


  publish-docker:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - uses: actions/checkout@v3
  
      - name: Build

        run: docker-compose build

      - name: Docker - Set image id
        run: |
          ID=ghcr.io/${{github.repository}}
          ID=$(echo $ID | tr '[A-Z]' '[a-z]')
          echo "IMAGE_ID=$ID" >> $GITHUB_ENV
      - name: Docker - Add version tag
        run: docker tag $BASE_DOCKER_IMAGE_NAME $IMAGE_ID:${{needs.setup.outputs.version}}

      - name: Docker - Add latest tag
        if: ${{needs.setup.outputs.isPrerelease != 'true'}}
        run: docker tag $BASE_DOCKER_IMAGE_NAME $IMAGE_ID:latest

      - name: Docker - Add next tag
        if: ${{needs.setup.outputs.isPrerelease == 'true'}}
        run: docker tag $BASE_DOCKER_IMAGE_NAME $IMAGE_ID:latest

      - name: Docker - Log into registry
        run: echo "${{ github.token }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Docker - Push version tag
        run: docker push $IMAGE_ID:${{needs.setup.outputs.version}}

      - name: Docker - Push latest tag
        if: ${{needs.setup.outputs.isPrerelease != 'true'}}
        run: docker push $IMAGE_ID:latest

      - name: Docker - Push next tag
        if: ${{needs.setup.outputs.isPrerelease == 'true'}}
        run: docker push $IMAGE_ID:latest
    
  create-release:
    runs-on: ubuntu-latest
    needs: [setup, publish-docker]
    steps:
      - uses: actions/checkout@v3
      - name: Create tags
        uses: cpdevtools/action-versions@latest
        with:
          createTags: all

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          tag_name: v${{ needs.setup.outputs.version }}
          name: Release v${{ needs.setup.outputs.version }}
          body: |
            Generated Release v${{ needs.setup.outputs.version }}
          prerelease: ${{ needs.setup.outputs.isPrerelease }}